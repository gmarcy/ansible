---

- name: Create undefined localhost aliases
  hosts: "{{ 'localhost-facts' if 'localhost-facts' in groups['ungrouped'] else 'localhost' }}"
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.define_localhost_aliases
    localhost_aliases:
    - 'localhost-facts'
    - 'playbook-facts'
    - 'cmdline-facts'
    - 'playbook-secrets'

- name: Check ansible version
  hosts: localhost-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.check_ansible_version

- name: Check if requested to stop here
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.check_stop_before
    task_to_check: task-gather-playbook-facts

- name: Gather command line facts
  hosts: cmdline-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.cmdline_gather_facts

- name: Gather localhost facts for this playbook
  hosts: localhost-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: load_host_vars_options
  - role: gmarcy.ansible.gather_localhost_facts

- name: Load playbook secrets we will use during this playbook
  hosts: playbook-secrets
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: load_host_vars_options
  - role: gmarcy.ansible.load_playbook_secrets
  tasks:
  - when: hostvars['cluster-facts'].vars_inventory.autowas_basedir is defined
    block:
    - when: hostvars['autowas-facts'].vars_inventory is not defined
      name: Define autowas-facts vars_inventory
      add_host:
        name: 'autowas-facts'
        vars_inventory:
          autowas_archive_url: "{{ autowas_vars.autowas_archive_url }}"
          autowas_basedir: "{{ autowas_vars.autowas_basedir }}"
          autowas_config_dir: "{{ autowas_vars.autowas_config_dir }}"
          autowas_config_file_suffix: "{{ autowas_vars.autowas_config_file_suffix }}"
          autowas_cfg_ssh_user: "{{ autowas_vars.autowas_cfg_ssh_user }}"
          autowas_cfg_install_path_basedir: "{{ autowas_vars.autowas_cfg_install_path_basedir }}"
          autowas_regression_config_dir: "{{ autowas_vars.autowas_regression_config_dir }}"
          autowas_was_level: "{{ autowas_vars.autowas_was_level }}"
          autowas_was_release: "{{ autowas_vars.autowas_was_release }}"
      vars:
        autowas_vars: "{{ hostvars['cluster-facts'].vars_inventory }}"

- name: Load options from host_vars, inventory, command line and environment
  hosts: all
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: load_host_vars_options
    when: not (options_loaded | default(false)) and (vars_host is defined or vars_inventory is defined)

- name: Set playbook facts derived from cmdline and localhost facts
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.set_remote_user

- name: Collect all inventory hosts with gathering roles
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.collect_gathering_hosts

- name: Call the gathering_roles defined for any hosts in the inventory
  hosts: "{{ hostvars['playbook-facts'].gathering_hosts | default('playbook-facts') }}"
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.loop_over_roles
    role_loop: "{{ gathering_roles }}"
    when: gathering_roles is defined

- name: Check if requested to stop here
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: playbook_facts
  roles:
  - role: gmarcy.ansible.check_stop_after
    task_to_check: task-gather-playbook-facts
