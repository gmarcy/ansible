---

- name: Create undefined localhost aliases
  hosts: localhost-facts
  become: false
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.define_localhost_aliases
    localhost_aliases:
    - 'cluster-facts'

- name: Check if requested to stop here
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.check_stop_before
    task_to_check: task-request-cluster

- name: Set cluster-facts dependent upon localhost-facts
  hosts: cluster-facts
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.cluster_facts_init

- name: "{{ 'Request a cluster from ' + hostvars['cluster-facts'].options.cluster_provisioner | default('undefined cluster provisioner') }}"
  hosts: "{{ hostvars['cluster-facts'].options.cluster_provisioner | default('cluster-facts') }}"
  become: false
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.end_current_play
    when: inventory_hostname == 'cluster-facts' or provisioning_role is not defined
  - role: gmarcy.ansible.include_dynamic_role
    dynamic_role: "{{ provisioning_role }}"

- import_playbook: gmarcy.ansible.gather_cluster_facts_common

- name: Prepare and provision all nodes
  hosts: "{{ groups['all_nodes'] | default('cluster-facts') }}"
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.end_current_play
    when: inventory_hostname == 'cluster-facts'
  - role: gmarcy.ansible.include_dynamic_role
    dynamic_role: "{{ node_prepare_role }}"
  - role: gmarcy.ansible.include_dynamic_role
    dynamic_role: "{{ node_provisioning_role }}"

- import_playbook: gmarcy.ansible.run_post_provisioning_roles

- name: Check if requested to stop here
  hosts: playbook-facts
  become: false
  gather_facts: false
  tags: request_cluster
  roles:
  - role: gmarcy.ansible.check_stop_after
    task_to_check: task-request-cluster
