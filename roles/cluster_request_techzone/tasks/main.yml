---

- name: Retrieve existing reservation
  ansible.builtin.uri:
    url: "{{ 'https://api.techzone.ibm.com/api/reservation/' + cluster_name }}"
    method: GET
    headers:
      accept: 'application/json'
      Authorization: "{{ 'Bearer ' + (lookup('unvault', hostvars['playbook-secrets']['itz_api_token']) | trim) }}"
    status_code: [200, 403]
    validate_certs: false
  register: _result
  when: cluster_name is defined

- name: Set _request_cluster fact
  ansible.builtin.set_fact:
    _request_cluster: "{{ cluster_name is not defined or _result.status != 200 }}"

- when: _request_cluster
  name: Run tasks to provision a new cluster
  ansible.builtin.include_tasks: request_cluster.yml

- name: Wait for reservation to become ready
  ansible.builtin.uri:
    url: "{{ 'https://api.techzone.ibm.com/api/reservation/' + cluster_name }}"
    method: GET
    headers:
      accept: 'application/json'
      Authorization: "{{ 'Bearer ' + (lookup('unvault', hostvars['playbook-secrets']['itz_api_token']) | trim) }}"
    status_code: [200, 403]
    validate_certs: false
  register: _result
  delay: 20
  retries: 600
  until: _result.status != 200 or _result.json.status != 'Provisioning'
  when: _request_cluster or _result.json.status == 'Provisioning'

- ansible.builtin.debug: var=_result
  name: Debugging

- ansible.builtin.fail: msg=stopping
  name: Debugging
