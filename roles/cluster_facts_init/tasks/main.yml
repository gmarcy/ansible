---

- name: We need either a cluster name or a provisioner
  ansible.builtin.assert:
    that: options.cluster_name is defined or options.cluster_provisioner is defined

- name: Set facts based on local_home
  ansible.builtin.set_fact:
    clusters_basedir: "{{ options.clusters_basedir if clusters_basedir_option_set else (local_home + '/.kube/clusters') }}"
    clusters_shared_kubeconfig_path: "{{ local_home + '/.kube/config' }}"
  vars:
    local_home: "{{ hostvars['localhost-facts'].local_home }}"
    clusters_basedir_option_set: "{{ options.clusters_basedir | default('') | length > 0 }}"

- when: options.cluster_name is defined
  name: Set facts based on cluster name
  ansible.builtin.include_tasks: set_cluster_name_facts.yml

- name: Check to see if we already have a shared kubeconfig
  ansible.builtin.stat:
    path: "{{ clusters_shared_kubeconfig_path }}"
  register: _result

- when: _result.stat.exists
  name: Load contents of the shared kubeconfig
  ansible.builtin.set_fact:
    shared_kubeconfig: "{{ lookup('file', clusters_shared_kubeconfig_path, split_lines=false) | from_yaml }}"
  no_log: "{{ noLog }}"

- name: Clear temp fact
  ansible.builtin.set_fact:
    _result: {}
