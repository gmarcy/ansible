---

- when: inventory_hostname == (groups['all_nodes'] | first)
  name: Tasks which are only performed on the first VM
  block:

    - name: Create autowas_config_dir folder
      ansible.builtin.file:
        path: "{{ autowas_config_dir }}"
        state: directory
        mode: '0755'

    - name: Create autowas_config_file from template
      ansible.builtin.template:
        src: "{{ templates_basedir + '/' + autowas_config_file + '.j2' }}"
        dest: "{{ autowas_config_dir + '/' + autowas_config_file }}"
        mode: '0644'
      vars:
        templates_basedir: "{{ hostvars['cluster-facts'].options.templates_basedir }}"
        primary_server_fqdn: "{{ hostvars[groups['all_nodes'][0]].fqdn }}"
        secondary_server_fqdn: "{{ hostvars[groups['all_nodes'][1]].fqdn }}"
        secrets: "{{ hostvars['playbook-secrets'].secrets }}"
        autowas_ldap_password_secret: "{{ secrets.autowas_ldap_password }}"
        autowas_ihs_password_secret: "{{ secrets.autowas_ihs_password }}"
        autowas_ldap_password: "{{ lookup(autowas_ldap_password_secret.module, autowas_ldap_password_secret.param) | trim }}"
        autowas_ihs_password: "{{ lookup(autowas_ihs_password_secret.module, autowas_ihs_password_secret.param) | trim }}"

    - name: Install tWAS server
      ansible.builtin.shell:
        chdir: "{{ autowas_config_dir }}"
        cmd: source {{ autowas_env_script }} && cfg -cfg {{ autowas_config_file }} install && touch {{ install_marker }}
        creates: "{{ install_marker }}"
        executable: /bin/bash
      register: _result
      changed_when: _result.start != None

    - name: Create tWAS server topology
      ansible.builtin.shell:
        chdir: "{{ autowas_config_dir }}"
        cmd: source {{ autowas_env_script }} && cfg -cfg {{ autowas_config_file }} createTopology && touch {{ topology_marker }}
        creates: "{{ topology_marker }}"
        executable: /bin/bash
      register: _result
      changed_when: _result.start != None

  vars:
    autowas_basedir: "{{ hostvars['cluster-facts'].options.autowas_basedir }}"
    autowas_config_dir: "{{ hostvars['cluster-facts'].options.autowas_config_dir }}"
    autowas_config_file: "{{ hostvars['cluster-facts'].options.autowas_config_file }}"
    autowas_env_script: "{{ autowas_basedir + '/bin/AutoWASEnv.sh' }}"
    install_marker: "{{ autowas_config_dir + '/.install_completed' }}"
    topology_marker: "{{ autowas_config_dir + '/.createTopology_completed' }}"
