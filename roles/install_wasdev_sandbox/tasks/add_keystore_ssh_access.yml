---

- when: inventory_hostname == (groups['all_nodes'] | first)
  name: Tasks which are only performed on the first VM
  block:

    - name: Make sure the ~/.cache/autowas/.keystore folder exists
      ansible.builtin.file:
        path: "{{ user_home + '/.cache/autowas/.keystore' }}"
        state: directory
        mode: '0700'
      register: _result

    - name: Copy keystore ssh key secret into ~/.cache/autowas/.keystore
      ansible.builtin.copy:
        content: |
          {{ ssh_keypair_key }}
        dest: "{{ user_home + '/.cache/autowas/.keystore/id_rsa.pem' }}"
        mode: '0600'
      vars:
        secrets: "{{ hostvars['playbook-secrets'].secrets }}"
        ssh_keypair_key_secret: "{{ secrets['keystore_ssh_key'] }}"
        ssh_keypair_key: "{{ lookup(ssh_keypair_key_secret.module, ssh_keypair_key_secret.param) | trim }}"
      no_log: "{{ noLog }}"
      changed_when: false

    - name: Copy saved PEM format private key
      ansible.builtin.copy:
        src: "{{ user_home + '/.cache/autowas/.keystore/id_rsa.pem' }}"
        dest: "{{ user_home + '/.cache/autowas/.keystore/id_rsa' }}"
        remote_src: true
        mode: '0600'
      register: _result

    - name: Generate a public key for the private key
      community.crypto.openssh_keypair:
        path: "{{ user_home + '/.cache/autowas/.keystore/id_rsa' }}"
        type: 'rsa'
        comment: 'sandbox tests keystore'
        regenerate: 'never'
      register: _result_keypair

    - name: Set facts from keypair
      ansible.builtin.set_fact:
        keypair_pubkey: "{{ _result_keypair.public_key }}"
        keypair_comment: "{{ _result_keypair.comment }}"
      delegate_to: 'sandbox-facts'
      delegate_facts: true

    - name: Copy saved PEM format private key
      ansible.builtin.copy:
        src: "{{ user_home + '/.cache/autowas/.keystore/id_rsa.pem' }}"
        dest: "{{ user_home + '/.cache/autowas/.keystore/id_rsa' }}"
        remote_src: true
        mode: '0600'
      register: _result

- name: Add keystore public key to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ ssh_user }}"
    key: "{{ ssh_key }}"
    comment: "{{ ssh_comment }}"
    state: present
  vars:
    ssh_user: "{{ hostvars['playbook-facts'].options.remote_user }}"
    ssh_key: "{{ hostvars['sandbox-facts'].keypair_pubkey }}"
    ssh_comment: "{{ hostvars['sandbox-facts'].keypair_comment }}"
