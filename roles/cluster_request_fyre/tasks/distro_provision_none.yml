---

- name: Set of assertions for non kubernetes clusters
  ansible.builtin.assert:
    that: options.fyre_ember_count >= 1

- when: options.fyre_group_id == 0
  name: Lookup group id from quota
  block:

    - name: Lookup the quota available to us
      ansible.builtin.uri:
        url: "{{ fyreocp_quotaurl }}"
        method: GET
        user: "{{ _secrets.fyre_user }}"
        password: "{{ _secrets.fyre_apikey }}"
        validate_certs: false
        force_basic_auth: "{{ options.fyre_force_basic_auth }}"
      changed_when: false
      register: _result_user_quota

    - name: Set _fyre_group_id fact
      ansible.builtin.set_fact:
        _fyre_group_id: "{{ _result_user_quota.json.details | map(attribute='product_group_id') | first | int }}"

- name: Wait until we have enough quota for the request
  ansible.builtin.uri:
    url: "{{ fyre_getquotaurl }}"
    method: GET
    user: "{{ _secrets.fyre_user }}"
    password: "{{ _secrets.fyre_apikey }}"
    validate_certs: false
    force_basic_auth: "{{ options.fyre_force_basic_auth }}"
  register: _result_user_quota
  changed_when: false
  vars:
    cluster_mem_needed: "{{ (options.fyre_ember_count | int) * (options.fyre_ember_mem | int) }}"
    cluster_mem_available: "{{ (_result_user_quota.json.memory_quota_gb | int) - (_result_user_quota.json.memory_allocated_gb | int) }}"
    fyre_group_id: "{{ _fyre_group_id | default(options.fyre_group_id) }}"
    fyre_user_email: "{{ _secrets.fyre_user_email }}"
  delay: 20
  retries: 30
  until: cluster_mem_available >= cluster_mem_needed

- name: Ensure empty cluster dir
  ansible.builtin.file:
    path: "{{ cluster_dir }}"
    mode: '0755'
    state: "{{ item }}"
  loop:
  - absent
  - directory

- name: Write cluster specific fyre request body
  ansible.builtin.copy:
    content: |
      fyre:
        creds:
          username: {{ _secrets.fyre_user }}
          api_key: {{ _secrets.fyre_apikey }}
          public_key: {{ hostvars['cluster-facts'].options.ssh_public_key }}
      product_group_id: {{ _fyre_group_id | default(options.fyre_group_id) }}
      cluster_prefix: {{ cluster_name }}
      clusterconfig:
        instance_type: 'virtual_server'
        platform: {{ options.fyre_platform }}
        user_comment: "{{ options.fyre_comment | default('Fyre stack for ' + _secrets.fyre_user) }}"
      site: {{ options.fyre_site }}
      {{ cluster_name }}:
      {% for index in range(0, options.fyre_ember_count | int) %}
      {% if options.fyre_ember_count | int == 1 %}
        - name: '{{ options.fyre_ember_name }}'
      {% else %}
        - name: '{{ options.fyre_ember_name | format(index + 1) }}'
      {% endif %}
          cpu: {{ options.fyre_ember_cpu }}
          memory: {{ options.fyre_ember_mem }}
          os: '{{ options.fyre_ember_os }}'
          publicvlan: 'y'
          privatevlan: 'y'
      {% if options.fyre_ember_additional_disks | default([]) | length > 0 %}
          additional_disks: {{ options.fyre_ember_additional_disks }}
      {% endif %}
      {% endfor %}
    dest: "{{ cluster_dir + '/fyre_build_req.yml' }}"
    mode: '0600'

- name: Clear register results and temporary facts
  ansible.builtin.set_fact:
    _fyre_group_id: 0
    _result_user_quota: {}
